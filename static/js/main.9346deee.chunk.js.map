{"version":3,"sources":["Calc.js","geo1.svg","geo2.svg","App.js","serviceWorkerRegistration.js","index.js"],"names":["Calc","this","angle","p","dw","Number","parseFloat","lp","beta","rad","ds","dj","o","hc","solve","d","Math","PI","r","a","b","xa","x","xb","sign","m","xm","alpha","h","cos","sin","hr","sqrt","hn","deg","toFixed","toString","App","props","state","profiles","name","activeProfile","showDeleteConfirm","localStorage","persistedState","getItem","JSON","parse","presets","handleSelect","bind","handleDuplicate","handleRemove","handleDeleteConfirmClose","handleChange","handleSubmit","calc","key","ev","i","parseInt","length","setState","profile","stringify","push","confirmed","splice","target","value","type","checked","preventDefault","setItem","set","c","get","selectItems","Dropdown","Header","forEach","index","Item","active","eventKey","onSelect","Container","Form","onSubmit","Row","className","Col","sm","Toggle","id","size","Menu","InputGroup","Control","onChange","Append","Button","variant","title","onClick","disabled","Card","Body","lg","src","Geo1","Group","as","controlId","Label","column","Prepend","Text","readOnly","placeholder","Geo2","Modal","show","onHide","closeButton","Title","Footer","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9346deee.chunk.js","sourcesContent":["class Calc {\n\n    constructor() {\n        this.angle = 0;\n    }\n\n    set(p) {\n        this.dw = Number.parseFloat(p.dw);\n        this.lp = Number.parseFloat(p.lp);\n        this.beta = this.rad(Number.parseFloat(p.beta));\n        this.ds = Number.parseFloat(p.ds);\n        this.dj = Number.parseFloat(p.dj);\n        this.o = Number.parseFloat(p.o);\n        this.hc = Number.parseFloat(p.hc);\n\n        this.solve();\n    }\n\n    rad(d) {\n        return d / 180 * Math.PI;\n    }\n\n    deg(r) {\n        return r * 180 / Math.PI;\n    }\n\n    solve() {\n        var a = 0;\n        var b = Math.PI;\n        var xa = this.x(a);\n        var xb = this.x(b);\n        const eps = 1e-5;\n\n        while ((Math.sign(xa) !== Math.sign(xb)) && (b - a) > eps) {\n            var m = 0.5 * (a + b);\n            var xm = this.x(m);\n            if (Math.sign(xa) === Math.sign(xm)) {\n                a = m;\n                xa = xm;\n            } else {\n                b = m;\n                xb = xm;\n            }\n        }\n\n        this.alpha = 0.5 * (a + b);\n\n        this.h = 0.5 * (\n            this.ds * Math.cos(this.alpha + this.beta)\n            - 2 * this.lp * Math.cos(this.alpha + this.beta)\n            + this.dw * Math.sin(this.alpha)\n            - this.dj * Math.sin(this.alpha + this.beta)\n            - this.ds * Math.sin(this.alpha + this.beta)\n        );\n\n        this.hr = Math.sqrt(this.o * this.o + this.h * this.h)\n            + 0.5 * this.ds\n            - 0.5 * this.dw;\n\n        this.hn = this.h\n            + 0.5 * this.ds\n            - this.hc;\n    }\n\n    x(alpha) {\n        return -this.o\n            + 0.5 * this.dw * Math.cos(alpha)\n            - 0.5 * (this.dj + this.ds) * Math.cos(alpha + this.beta)\n            + (-0.5 * this.ds + this.lp) * Math.sin(alpha + this.beta);\n    }\n\n    get() {\n        return {\n            alpha: this.deg(this.alpha).toFixed(1).toString(),\n            h: this.h.toFixed(1).toString(),\n            hr: this.hr.toFixed(1).toString(),\n            hn: this.hn.toFixed(1).toString()\n        };\n    }\n\n}\n\nexport default Calc;\n","export default __webpack_public_path__ + \"static/media/geo1.dbea02bb.svg\";","export default __webpack_public_path__ + \"static/media/geo2.9467a505.svg\";","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport { Trash, FileEarmarkPlus } from 'react-bootstrap-icons';\n\nimport Calc from './Calc.js';\nimport './App.css';\nimport Geo1 from './geo1.svg';\nimport Geo2 from './geo2.svg';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profiles: [\n                {\n                    name: 'default',\n                    dw: '250',\n                    lp: '139',\n                    beta: '15',\n                    ds: '12',\n                    dj: '12',\n                    o: '50',\n                    hc: '30',\n                },\n            ],\n            activeProfile: 0,\n            showDeleteConfirm: false,\n        };\n        if (typeof localStorage !== 'undefined') {\n            var persistedState = localStorage.getItem('state');\n            if (persistedState) {\n                this.state = JSON.parse(persistedState);\n                this.state.showDeleteConfirm = false;\n            }\n        }\n\n        this.presets = [\n            {\n                name: '200 mm Wheel',\n                dw: '200',\n                lp: '139',\n                beta: '15',\n                ds: '12',\n                dj: '12',\n                o: '0',\n                hc: '0',\n            },\n            {\n                name: '250 mm Wheel',\n                dw: '250',\n                lp: '139',\n                beta: '15',\n                ds: '12',\n                dj: '12',\n                o: '0',\n                hc: '0',\n            },\n            {\n                name: 'T8 vertical USB',\n                dw: '250',\n                lp: '139',\n                beta: '15',\n                ds: '12',\n                dj: '12',\n                o: '50',\n                hc: '29',\n            },\n            {\n                name: 'T4',\n                dw: '200',\n                lp: '139',\n                beta: '15',\n                ds: '12',\n                dj: '12',\n                o: '50',\n                hc: '20',\n            },\n        ];\n\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleDuplicate = this.handleDuplicate.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n        this.handleDeleteConfirmClose = this.handleDeleteConfirmClose.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.calc = new Calc();\n    }\n\n    handleSelect(key, ev) {\n        const i = parseInt(key, 10);\n        if (i < this.state.profiles.length) {\n            this.setState({ activeProfile: i });\n        } else {\n            var profile = JSON.parse(JSON.stringify(this.presets[i - this.state.profiles.length]));\n            this.state.profiles.push(profile);\n            this.setState({\n                profiles: this.state.profiles,\n                activeProfile: this.state.profiles.length - 1\n            });\n        }\n    }\n\n    handleDuplicate() {\n        var profile = JSON.parse(JSON.stringify(this.state.profiles[this.state.activeProfile]));\n        profile.name += ' (copy)';\n        this.state.profiles.push(profile);\n        this.setState({\n            profiles: this.state.profiles,\n            activeProfile: this.state.profiles.length - 1\n        });\n    }\n\n    handleRemove() {\n        if (this.state.profiles.length > 1) {\n            this.setState({ showDeleteConfirm: true });\n        }\n    }\n\n    handleDeleteConfirmClose(confirmed) {\n        if (confirmed && this.state.profiles.length > 1) {\n            this.state.profiles.splice(this.state.activeProfile, 1);\n            var i = this.state.activeProfile;\n            if (i >= this.state.profiles.length) {\n                i = this.state.profiles.length - 1;\n            }\n            this.setState({\n                profiles: this.state.profiles,\n                activeProfile: i\n            });\n        }\n        this.setState({ showDeleteConfirm: false });\n    }\n\n    handleChange(ev) {\n        const target = ev.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        var profile = this.state.profiles[this.state.activeProfile];\n        profile[name] = value;\n        this.setState({ profiles: this.state.profiles });\n    }\n\n    handleSubmit(ev) {\n        ev.preventDefault();\n    }\n\n    componentDidUpdate() {\n        if (typeof localStorage !== 'undefined') {\n            localStorage.setItem('state', JSON.stringify(this.state));\n        }\n    }\n\n    render() {\n        const profile = this.state.profiles[this.state.activeProfile];\n        this.calc.set(profile);\n        const c = this.calc.get();\n\n        var selectItems = [];\n        selectItems.push(<Dropdown.Header>my Profiles</Dropdown.Header>);\n        this.state.profiles.forEach((profile, index) => {\n            selectItems.push(\n                <Dropdown.Item active={index === this.state.activeProfile} eventKey={index} onSelect={this.handleSelect}>\n                    {profile.name}\n                </Dropdown.Item>\n            );\n        });\n        selectItems.push(<Dropdown.Header>add Preset</Dropdown.Header>);\n        this.presets.forEach((profile, index) => {\n            selectItems.push(\n                <Dropdown.Item eventKey={this.state.profiles.length + index} onSelect={this.handleSelect}>\n                    {profile.name}\n                </Dropdown.Item>\n            );\n        });\n\n        return (\n            <Container>\n                <Form onSubmit={this.handleSubmit}>\n                    <Row className=\"my-4\">\n                        <Col sm=\"4\">\n                            <Dropdown>\n                                <Dropdown.Toggle id=\"machine\" size=\"lg\" className=\"app-shadow\">\n                                    Profiles\n\t\t\t                    </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"app-shadow\">\n                                    {selectItems}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                        <Col sm=\"8\">\n                            <InputGroup className=\"app-shadow\">\n                                <Form.Control size=\"lg\" type=\"text\" name=\"name\" value={profile.name} onChange={this.handleChange} />\n                                <InputGroup.Append>\n                                    <Button variant=\"success\" size=\"lg\" title=\"duplicate\" onClick={this.handleDuplicate}>&nbsp;<FileEarmarkPlus />&nbsp;</Button>\n                                    <Button variant=\"danger\" size=\"lg\" title=\"remove\" onClick={this.handleRemove} disabled={this.state.profiles.length <= 1}>&nbsp;<Trash />&nbsp;</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Card className=\"mb-4\">\n                        <Card.Header>\n                            Sharpening Angle\n                        </Card.Header>\n                        <Card.Body>\n                            <Row>\n                                <Col lg={3} className=\"mb-2\">\n                                    <img src={Geo1} />\n                                </Col>\n                                <Col lg={9}>\n                                    <Form.Group as={Row} controlId=\"dw\">\n                                        <Form.Label column sm={3}>Wheel Diameter</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>d<sub>w</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"dw\" value={profile.dw} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"lp\">\n                                        <Form.Label column sm={3}>Projection Distance</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>l<sub>p</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"lp\" value={profile.lp} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"beta\">\n                                        <Form.Label column sm={3}>Grind Angle</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>β</InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"beta\" value={profile.beta} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>°</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"hr\">\n                                        <Form.Label column sm={3}>Wheel Distance</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>h<sub>r</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" readOnly placeholder={c.hr} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    {profile.hc > 0 &&\n                                        <Form.Group as={Row} controlId=\"hn\">\n                                            <Form.Label column sm={3}>Case Distance</Form.Label>\n                                            <Col sm={9}>\n                                                <InputGroup>\n                                                    <InputGroup.Prepend>\n                                                        <InputGroup.Text>h<sub>n</sub></InputGroup.Text>\n                                                    </InputGroup.Prepend>\n                                                    <Form.Control type=\"text\" readOnly placeholder={c.hn} />\n                                                    <InputGroup.Append>\n                                                        <InputGroup.Text>mm</InputGroup.Text>\n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                            </Col>\n                                        </Form.Group>\n                                    }\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className=\"mb-4\">\n                        <Card.Header>\n                            Machine Settings\n\t\t                </Card.Header>\n                        <Card.Body>\n                            <Row>\n                                <Col lg={3} className=\"mb-2\">\n                                    <img src={Geo2} />\n                                </Col>\n                                <Col lg={9}>\n                                    <Form.Group as={Row} controlId=\"ds\">\n                                        <Form.Label column sm={3}>Support Bar Diameter</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>d<sub>s</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"ds\" value={profile.ds} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"dj\">\n                                        <Form.Label column sm={3}>Knife Jig Diameter</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>d<sub>j</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"dj\" value={profile.dj} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"o\">\n                                        <Form.Label column sm={3}>Support Bar Offset</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>o</InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"o\" value={profile.o} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"hc\">\n                                        <Form.Label column sm={3}>Case Height</Form.Label>\n                                        <Col sm={9}>\n                                            <InputGroup>\n                                                <InputGroup.Prepend>\n                                                    <InputGroup.Text>h<sub>c</sub></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <Form.Control type=\"text\" name=\"hc\" value={profile.hc} onChange={this.handleChange} />\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>mm</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Row className=\"mb-4\">\n                    </Row>\n                </Form>\n                <Modal show={this.state.showDeleteConfirm} onHide={this.handleDeleteConfirmClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirm Deletion</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete the current profile?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.handleDeleteConfirmClose(false)}>\n                            Cancel\n\t\t                </Button>\n                        <Button variant=\"danger\" onClick={() => this.handleDeleteConfirmClose(true)}>\n                            Delete\n\t\t                </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}